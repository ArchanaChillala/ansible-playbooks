---
# Set the AWS keys:
#
# export AWS_ACCESS_KEY_ID=ABCDEFGHIJK
# export AWS_SECRET_ACCESS_KEY=asdfghjkl098765434323
#
# Now run the playbook, supplying an instance name and EC2 creds
# Examples:
#
# ansible-playbook -i hosts --private-key=~/.ssh/myawskey.pem -e "inst_name=<myinst> keypair=myawskey" neo4j-demo.yml
#
# ansible-playbook -i hosts --private-key=~/.ssh/myawskey.pem --extra-vars '{"inst_name":"<myinst>","keypair":"myawskey"}' neo4j-demo.yml
#
# ansible-playbook -i hosts --private-key=~/.ssh/myawskey.pem --extra-vars '{"inst_name":"<myinst>","keypair":"myawskey", "security_groups":["mysg1","mysg2"]}' looker-hosted-provision.yml
#
# ansible-playbook -i hosts --private-key=~/.ssh/myawskey.pem --extra-vars '{"inst_name":"<myinst>","keypair":"myawskey", "security_groups":["mysg1","mysg2"]}' looker-hosted-provision.yml

- name: Stage EBS AWS Server
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Launch instance 
      local_action:
        module: ec2
        region: eu-west-1
        keypair: "{{ keypair }}"
        group: "{{ security_groups }}"
        instance_type: "{{ instance_type }}"
        #instance_profile_name: "{{ instance_profile_name }}"
        image: "{{ image[instance_type] }}"
        instance_tags: '{"Name":"{{ inst_name }}",  "systemtype":"neo4j-demo" }'
        wait: true
      register: ec2
  
    - name: Report
      local_action: debug msg="Instance Launched."

    - name: Add all instance public IPs to host group
      local_action: add_host hostname={{ item.public_ip }} groupname=ec2hosts
      with_items: ec2.instances

    - name: Wait for SSH to come up
      local_action: wait_for host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

- name: Configure Instance
  hosts: ec2hosts
  user: ubuntu
  sudo: yes
  gather_facts: true

  roles:
   - neo4j
   